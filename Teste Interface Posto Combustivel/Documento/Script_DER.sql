/******************************************************************************/
/***         Generated by IBExpert 2020.4.21.2 12/04/2024 13:12:15          ***/
/******************************************************************************/

/******************************************************************************/
/***                                Domains                                 ***/
/******************************************************************************/



/******************************************************************************/
/***                               Exceptions                               ***/
/******************************************************************************/

/******************************************************************************/
/***                               Procedures                               ***/
/******************************************************************************/

SET TERM ^ ;

SET TERM ; ^



/******************************************************************************/
/***                            Tables and Views                            ***/
/******************************************************************************/

CREATE TABLE bomba (
    id_bomba INTEGER NOT NULL,
    id_tanque INTEGER,
    dsc_nome VARCHAR(20),
    bol_ativo BOOLEAN DEFAULT 1);

CREATE GENERATOR GEN_BOMBA_ID;

CREATE TABLE tanque (
    id_tenque INTEGER NOT NULL,
    dsc_nome VARCHAR(20));

CREATE GENERATOR GEN_TANQUE_ID;

CREATE TABLE tanque_abastecimento (
    id_tanque_abastecimento INTEGER NOT NULL,
    id_tanque INTEGER,
    dt_abastecimento TIMESTAMP,
    num_quantidade NUMERIC(15,2),
    num_valor NUMERIC(14,4),
    num_imposto NUMERIC(15,2));

CREATE GENERATOR GEN_TANQUE_ABASTECIMENTO_ID;

CREATE TABLE venda (
    id_venda INTEGER NOT NULL,
    id_bomba INTEGER,
    dsc_cliente VARCHAR(50),
    dt_venda TIMESTAMP,
    num_Quantidade NUMERIC(15,2),
    num_valor NUMERIC(14,4),
    num_imposto NUMERIC(15,2));

CREATE GENERATOR GEN_VENDA_ID;

/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/


ALTER TABLE bomba ADD CONSTRAINT PK_bomba PRIMARY KEY (id_bomba);
ALTER TABLE tanque ADD CONSTRAINT PK_tamque PRIMARY KEY (id_tenque);
ALTER TABLE tanque_abastecimento ADD CONSTRAINT PK_tanque_abastecimento PRIMARY KEY (id_tanque_abastecimento);
ALTER TABLE venda ADD CONSTRAINT PK_venda PRIMARY KEY (id_venda);

/******************************************************************************/
/***                           Unique constraints                           ***/
/******************************************************************************/



/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/


ALTER TABLE bomba ADD CONSTRAINT FK_bomba_tamque FOREIGN KEY (id_tanque) REFERENCES tanque (id_tenque);
ALTER TABLE tanque_abastecimento ADD CONSTRAINT FK_tanque_abastecimento_tanque FOREIGN KEY (id_tanque) REFERENCES tanque (id_tenque);
ALTER TABLE venda ADD CONSTRAINT FK_venda_bomba FOREIGN KEY (id_bomba) REFERENCES bomba (id_bomba);

/******************************************************************************/
/***                           Check constraints                            ***/
/******************************************************************************/



/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/


CREATE INDEX  ON venda ();

/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/

SET TERM ^ ;

/* Trigger: BOMBA_BI */
CREATE OR ALTER TRIGGER BOMBA_BI FOR BOMBA
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_bomba is null) then
    new.id_bomba = gen_id(gen_bomba_id,1);
  if (new.id_bomba = 0) then
    new.id_bomba = gen_id(gen_bomba_id,1);
end
^

/* Trigger: TANQUE_BI */
CREATE OR ALTER TRIGGER TANQUE_BI FOR TANQUE
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_tenque is null) then
    new.id_tenque = gen_id(gen_tanque_id,1);
  if (new.id_tenque = 0) then
    new.id_tenque = gen_id(gen_tanque_id,1);
end
^

/* Trigger: TANQUE_ABASTECIMENTO_BI */
CREATE OR ALTER TRIGGER TANQUE_ABASTECIMENTO_BI FOR TANQUE_ABASTECIMENTO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_tanque_abastecimento is null) then
    new.id_tanque_abastecimento = gen_id(gen_tanque_abastecimento_id,1);
  if (new.id_tanque_abastecimento = 0) then
    new.id_tanque_abastecimento = gen_id(gen_tanque_abastecimento_id,1);

end
^

/* Trigger: VENDA_BI */
CREATE OR ALTER TRIGGER VENDA_BI FOR VENDA
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_venda is null) then
    new.id_venda = gen_id(gen_venda_id,1);
  if (new.id_venda = 0) then
    new.id_venda = gen_id(gen_venda_id,1);
end
^

SET TERM ; ^

SET TERM ; ^

/******************************************************************************/
/***                               Procedures                               ***/
/******************************************************************************/

SET TERM ^ ;

create or alter procedure SP_GEN_BOMBA_ID
returns (
    ID integer)
as
begin
  id = gen_id(gen_bomba_id, 1);
  suspend;
end^

SET TERM ; ^

/* Following GRANT statements are generated automatically */

GRANT USAGE ON SEQUENCE GEN_BOMBA_ID TO PROCEDURE SP_GEN_BOMBA_ID;

/* Existing privileges on this procedure */

GRANT EXECUTE ON PROCEDURE SP_GEN_BOMBA_ID TO SYSDBA;

SET TERM ; ^

create or alter procedure SP_GEN_TANQUE_ABASTECIMENTO_ID
returns (
    ID integer)
as
begin
  id = gen_id(gen_tanque_abastecimento_id, 1);
  suspend;
end^

SET TERM ; ^

/* Following GRANT statements are generated automatically */

GRANT USAGE ON SEQUENCE GEN_TANQUE_ABASTECIMENTO_ID TO PROCEDURE SP_GEN_TANQUE_ABASTECIMENTO_ID;

/* Existing privileges on this procedure */

GRANT EXECUTE ON PROCEDURE SP_GEN_TANQUE_ABASTECIMENTO_ID TO SYSDBA;

SET TERM ; ^

create or alter procedure SP_GEN_TANQUE_ID
returns (
    ID integer)
as
begin
  id = gen_id(gen_tanque_id, 1);
  suspend;
end^

SET TERM ; ^

/* Following GRANT statements are generated automatically */

GRANT USAGE ON SEQUENCE GEN_TANQUE_ID TO PROCEDURE SP_GEN_TANQUE_ID;

/* Existing privileges on this procedure */

GRANT EXECUTE ON PROCEDURE SP_GEN_TANQUE_ID TO SYSDBA;

SET TERM ^ ;

create or alter procedure SP_GEN_VENDA_ID
returns (
    ID integer)
as
begin
  id = gen_id(gen_venda_id, 1);
  suspend;
end^

SET TERM ; ^

/* Following GRANT statements are generated automatically */

GRANT USAGE ON SEQUENCE GEN_VENDA_ID TO PROCEDURE SP_GEN_VENDA_ID;

/* Existing privileges on this procedure */

GRANT EXECUTE ON PROCEDURE SP_GEN_VENDA_ID TO SYSDBA;

SET TERM ; ^



/******************************************************************************/
/***                          Object descriptions                           ***/
/******************************************************************************/

